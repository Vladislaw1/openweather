{"version":3,"sources":["client/components/WeatherListItem/WeatherListItem.module.scss","client/components/WeatherHourlyListItem/WeatherHourlyListItem.module.scss","page/CityWeatherHourlyPage.module.scss","client/components/Header/Header.module.scss","client/components/WeatherList/WeatherList.module.scss","client/components/WeatherHourlyList/WeatherHourlyList.module.scss","redux/city/city-selector.js","redux/city/service.js","shared/service/base-http-service.js","redux/city/city-actions.js","redux/city/city-operations.js","redux/city/city-endpoint.js","client/components/WeatherListItem/WeatherListItem.jsx","client/components/WeatherList/WeatherList.jsx","client/components/Header/Header.jsx","shared/hooks/useForm.js","client/components/AddCityForm/AddCityForm.jsx","page/MainPage.jsx","client/components/WeatherHourlyListItem/WeatherHourlyListItem.jsx","client/components/WeatherHourlyListItem/converterTime.js","client/components/WeatherHourlyList/WeatherHourlyList.jsx","page/CityWeatherPage.jsx","shared/routes/routes.js","App.js","redux/city/city-reducer.js","redux/store.js","index.js"],"names":["module","exports","citesInfo","state","weather","cites","citesWeatherHourly","weather_hourly","hourly","CityService","endpoint","a","this","get","data","BASE_URL","USER_KEY","axios","getCityInfoRequest","createAction","getCityInfoSuccess","getCityInfoError","getCityWeatherHourlyRequest","getCityWeatherHourlySuccess","getCityWeatherHourlyError","updateCityInfoRequest","deleteCityInfoSuccess","deleteCityInfoError","service","getCityInfo","dispatch","getCity","allCitesPoint","name","WeatherListItem","props","useDispatch","coord","lat","lon","main","temp_min","temp_max","icon","description","className","s","weatherListItem","btn_update","onClick","btn_delete","id","localStorage","removeItem","toLowerCase","e","weatherListItem_link","to","alt","src","Math","round","WeatherList","useSelector","weatherList","map","el","Header","children","header","header_caption","useForm","initialState","onSubmit","useState","setData","handleChange","value","target","handleSubmit","preventDefault","clearInput","AddCityForm","useCallback","setItem","onChange","placeholder","autoComplete","MainPage","useEffect","i","length","key","getItem","WeatherHourlyListItem","temp","feels_like","dt","humidity","wind_speed","timestamp","date","Date","time","getHours","getMinutes","moment","format","converterTime","style","weather_hourly_list_item","weather_hourly_list_item_time","weather_hourly_list_item_date","WeatherHourlyList","weatherCity","weather_hourly_list","v4","CityWeatherPage","match","params","location","useLocation","history","useHistory","cityWeatherPoint","search","getCityWeatherHourly","section","caption","btn_goBack","goBack","Routers","exact","path","component","App","createReducer","payload","findIndex","item","idx","console","log","splice","_","combineReducers","middleware","getDefaultMiddleware","thunk","store","configureStore","reducer","cityReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b2630be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherListItem\":\"WeatherListItem_weatherListItem__2z9wH\",\"weatherListItem_link\":\"WeatherListItem_weatherListItem_link__jaP1Z\",\"btn_update\":\"WeatherListItem_btn_update__10b3W\",\"btn_delete\":\"WeatherListItem_btn_delete__1r3H7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather_hourly_list_item\":\"WeatherHourlyListItem_weather_hourly_list_item__22bGH\",\"weather_hourly_list_item_time\":\"WeatherHourlyListItem_weather_hourly_list_item_time__1ECYz\",\"weather_hourly_list_item_date\":\"WeatherHourlyListItem_weather_hourly_list_item_date__9Cj-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caption\":\"CityWeatherHourlyPage_caption__x8j2L\",\"btn_goBack\":\"CityWeatherHourlyPage_btn_goBack__Kr4kr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2yImL\",\"header_caption\":\"Header_header_caption__3oRc4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherList\":\"WeatherList_weatherList__2CDu-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather_hourly_list\":\"WeatherHourlyList_weather_hourly_list__1zE8I\"};","export const citesInfo = state => state.weather.cites\r\nexport const citesWeatherHourly = state => state.weather.weather_hourly.hourly\r\n","import {BaseHttpService} from \"../../shared/service/base-http-service\";\r\n\r\nexport class CityService extends BaseHttpService{\r\n    async getCity(endpoint){\r\n        try {\r\n            const data = await this.get(endpoint)\r\n            return data\r\n        }catch (e) {\r\n\r\n        }\r\n    }\r\n    async getCityWeatherHourly(endpoint){\r\n        try {\r\n            const data = await this.get(endpoint)\r\n            return data\r\n        }catch (e) {\r\n\r\n        }\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nexport class BaseHttpService {\r\n    BASE_URL = \"https://api.openweathermap.org/data/2.5\";\r\n    USER_KEY = \"b5c6ee162439d799c35b2730084db6e5\"\r\n\r\n    async get(endpoint){\r\n        try{\r\n            const {data} = await axios.get(`${this.BASE_URL}/${endpoint}&appid=${this.USER_KEY}`)\r\n            return data\r\n        }catch (e) {\r\n\r\n        }\r\n    }\r\n}","import {createAction} from \"@reduxjs/toolkit\";\r\n\r\nexport const getCityInfoRequest = createAction(\"getCityInfoRequest\")\r\nexport const getCityInfoSuccess = createAction(\"getCityInfoSuccess\")\r\nexport const getCityInfoError = createAction(\"getCityInfoError\")\r\n\r\nexport const getCityWeatherHourlyRequest = createAction(\"getCityWeatherHourlyRequest\")\r\nexport const getCityWeatherHourlySuccess = createAction(\"getCityWeatherHourlySuccess\")\r\nexport const getCityWeatherHourlyError = createAction(\"getCityWeatherHourlyError\")\r\n\r\nexport const updateCityInfoRequest = createAction(\"updateCityInfoRequest\")\r\nexport const updateCityInfoSuccess = createAction(\"updateCityInfoSuccess\")\r\nexport const updateCityInfoError = createAction(\"updateCityInfoError\")\r\n\r\nexport const deleteCityInfoRequest = createAction(\"deleteCityInfoRequest\")\r\nexport const deleteCityInfoSuccess = createAction(\"deleteCityInfoSuccess\")\r\nexport const deleteCityInfoError = createAction(\"deleteCityInfoError\")","import {CityService} from \"./service\";\r\nimport {\r\n    deleteCityInfoError,\r\n    deleteCityInfoSuccess,\r\n    getCityInfoError,\r\n    getCityInfoRequest,\r\n    getCityInfoSuccess, getCityWeatherHourlyError,\r\n    getCityWeatherHourlyRequest,\r\n    getCityWeatherHourlySuccess,\r\n    updateCityInfoError,\r\n    updateCityInfoRequest,\r\n    updateCityInfoSuccess\r\n} from \"./city-actions\";\r\n\r\nconst service = new CityService()\r\n\r\nexport const getCityInfo = (endpoint) => async dispatch => {\r\n    dispatch(getCityInfoRequest())\r\n    try {\r\n        const data = await service.getCity(endpoint)\r\n        dispatch(getCityInfoSuccess(data))\r\n    }catch(e){\r\n        dispatch(getCityInfoError(e))\r\n    }\r\n}\r\n\r\nexport const getCityWeatherHourly = (endpoint) => async dispatch => {\r\n    dispatch(getCityWeatherHourlyRequest())\r\n    try {\r\n        const data = await service.getCityWeatherHourly(endpoint)\r\n        dispatch(getCityWeatherHourlySuccess(data))\r\n    }catch(e){\r\n        dispatch(getCityWeatherHourlyError(e))\r\n    }\r\n}\r\n\r\nexport const updateWeather = (name) => async dispatch => {\r\n    dispatch(updateCityInfoRequest)\r\n    try{\r\n        const data = await service.getCity(name)\r\n        dispatch(updateCityInfoSuccess(data))\r\n    }catch (e) {\r\n        dispatch(updateCityInfoError(e))\r\n    }\r\n}\r\n\r\nexport const deleteCityInfo = (id) => async dispatch => {\r\n    dispatch(deleteCityInfoError())\r\n    try {\r\n        dispatch(deleteCityInfoSuccess(id))\r\n    }catch(e){\r\n        dispatch(deleteCityInfoError(e))\r\n    }\r\n}","export const allCitesPoint = (name) => `weather?q=${name}`\r\nexport const cityWeatherPoint = (location) => `onecall${location}`","import React from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nimport {deleteCityInfo, getCityInfo} from \"../../../redux/city/city-operations\";\r\n\r\nimport s from \"./WeatherListItem.module.scss\"\r\nimport {Link} from \"react-router-dom\";\r\nimport {allCitesPoint} from \"../../../redux/city/city-endpoint\";\r\n\r\nfunction WeatherListItem(props) {\r\n    const dispatch = useDispatch()\r\n    const {name} = props\r\n    const {lat, lon} = props.coord\r\n    const {temp_min, temp_max} = props.main\r\n    const {icon, description} = props.weather[0]\r\n\r\n    function handleClick() {\r\n        localStorage.removeItem(name.toLowerCase())\r\n        dispatch(deleteCityInfo(props.id))\r\n    }\r\n\r\n    function updateWeather() {\r\n        dispatch(getCityInfo(allCitesPoint(name)))\r\n    }\r\n\r\n    return (\r\n        <li className={s.weatherListItem}>\r\n            <button className={s.btn_update} onClick={updateWeather}>&#8634;</button>\r\n            <button className={s.btn_delete} onClick={handleClick}>&#10008;</button>\r\n            <Link className={s.weatherListItem_link} to={`/weather/${name}?lat=${lat}&lon=${lon}`}>\r\n                <p>{name}</p>\r\n                <img alt={\"awq\"} src={`https://openweathermap.org/img/wn/${icon}@2x.png`}/>\r\n                <div>\r\n                    <p>min:{Math.round(temp_min - 273)}&deg;</p>\r\n                    <p>max:{Math.round(temp_max - 273)}&deg;</p>\r\n                    <p>{description}</p>\r\n                </div>\r\n            </Link>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default WeatherListItem;","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nimport {citesInfo} from \"../../../redux/city/city-selector\";\r\n\r\nimport WeatherListItem from \"../WeatherListItem\";\r\n\r\nimport s from \"./WeatherList.module.scss\"\r\n\r\nfunction WeatherList() {\r\n    const cites = useSelector(citesInfo)\r\n\r\n    return (\r\n        <ul className={s.weatherList}>\r\n            {cites?.map(el => <WeatherListItem key={el.id} {...el}/>)}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default WeatherList;","import React from 'react';\r\n\r\nimport s from \"./Header.module.scss\"\r\n\r\nfunction Header({children}) {\r\n    return (\r\n        <header className={s.header}>\r\n            <h2 className={s.header_caption}>OpenWeather</h2>\r\n            {children}\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {useState} from \"react\";\r\n\r\nconst useForm = (initialState,onSubmit = () => {}) => {\r\n    const [data,setData] = useState(initialState)\r\n\r\n    const handleChange = ({target}) => {\r\n        const {value} = target\r\n        setData(value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        onSubmit(data)\r\n        clearInput()\r\n    }\r\n\r\n    const clearInput = () => {\r\n        setData(\"\")\r\n    }\r\n    return [data,handleChange,handleSubmit]\r\n}\r\n\r\nexport default useForm;","import React, {useCallback, useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nimport useForm from \"../../../shared/hooks/useForm\";\r\n\r\nimport {getCityInfo} from \"../../../redux/city/city-operations\";\r\nimport {allCitesPoint} from \"../../../redux/city/city-endpoint\";\r\n\r\nfunction AddCityForm() {\r\n    const dispatch = useDispatch()\r\n\r\n    const [name,setName] = useState(\"\")\r\n\r\n    const onSubmit = useCallback((data) => {\r\n        dispatch(getCityInfo(allCitesPoint(data)))\r\n        localStorage.setItem(data.toLowerCase(), data)\r\n    }, [dispatch])\r\n\r\n    const [data,handleChange, handleSubmit] = useForm(name, onSubmit)\r\n\r\n    return (\r\n        <form>\r\n            <input onChange={handleChange} name={\"name\"} value={data} placeholder={\"City name\"} autoComplete={\"off\"}/>\r\n            <button onClick={handleSubmit}>Add</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AddCityForm;","import React, {useEffect} from 'react';\r\nimport WeatherList from \"../client/components/WeatherList\";\r\nimport Header from \"../client/components/Header/Header\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getCityInfo} from \"../redux/city/city-operations\";\r\nimport {allCitesPoint} from \"../redux/city/city-endpoint\";\r\nimport AddCityForm from \"../client/components/AddCityForm\";\r\n\r\nfunction MainPage() {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            let key = localStorage.key(i);\r\n            const name = localStorage.getItem(key)\r\n            dispatch(getCityInfo(allCitesPoint(name)))\r\n        }\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <Header>\r\n                <AddCityForm/>\r\n            </Header>\r\n            <WeatherList />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\r\nimport {converterTime} from \"./converterTime\";\r\n\r\nimport style from \"./WeatherHourlyListItem.module.scss\"\r\n\r\nfunction WeatherHourlyListItem(props) {\r\n    const {temp, feels_like, dt, humidity, wind_speed} = props;\r\n    const {icon, description} = props.weather[0];\r\n    const {time, date} = converterTime(dt)\r\n\r\n    return (\r\n        <li className={style.weather_hourly_list_item}>\r\n            <p className={style.weather_hourly_list_item_time}>{time}</p>\r\n            <p className={style.weather_hourly_list_item_date}>{date}</p>\r\n            <img alt={\"icon weather\"} src={`https://openweathermap.org/img/wn/${icon}@2x.png`}/>\r\n            <p>{Math.round(temp - 273)}&deg;</p>\r\n            <p>\r\n                Ощущается как: {Math.round(feels_like - 273)}&deg;\r\n            </p>\r\n            <p>Влажность: {humidity}</p>\r\n            <p>Скорость ветра: {wind_speed}м/с</p>\r\n            <p>{description}</p>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default WeatherHourlyListItem;","import moment from \"moment\";\r\n\r\nexport function converterTime(timestamp) {\r\n    const date = new Date(timestamp*1000);\r\n    const timeStampCon = date.getHours() + ':' + date.getMinutes() + \"0\";\r\n    return {\r\n        time:timeStampCon,\r\n        date: moment(date).format(\"dd D\")\r\n    };\r\n}","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nimport {v4} from 'uuid';\r\n\r\nimport {citesWeatherHourly} from \"../../../redux/city/city-selector\";\r\nimport WeatherHourlyListItem from \"../WeatherHourlyListItem\";\r\n\r\nimport style from \"./WeatherHourlyList.module.scss\"\r\n\r\nfunction WeatherHourlyList() {\r\n    const weatherCity = useSelector(citesWeatherHourly)\r\n\r\n    return (\r\n        <ul className={style.weather_hourly_list}>{weatherCity?.map(el => <WeatherHourlyListItem key={v4()} {...el}/>)}</ul>\r\n    );\r\n}\r\n\r\nexport default WeatherHourlyList;","import React, {useEffect} from 'react';\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nimport {getCityWeatherHourly} from \"../redux/city/city-operations\";\r\nimport {cityWeatherPoint} from \"../redux/city/city-endpoint\";\r\nimport WeatherHourlyList from \"../client/components/WeatherHourlyList\";\r\nimport Header from \"../client/components/Header/Header\";\r\n\r\nimport style from \"./CityWeatherHourlyPage.module.scss\"\r\n\r\nfunction CityWeatherPage(props) {\r\n    const {name} = props.match.params\r\n\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        dispatch(getCityWeatherHourly(cityWeatherPoint((location.search))))\r\n    }, [dispatch, location.search])\r\n\r\n\r\n    return (\r\n        <div className={style.section}>\r\n            <Header>\r\n                <h1 className={style.caption}>Погода на ближайшие 48 часов в {name}</h1>\r\n            </Header>\r\n            <button className={style.btn_goBack} onClick={history.goBack}>Go Back</button>\r\n            <WeatherHourlyList/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CityWeatherPage;","import {Switch ,Route} from \"react-router-dom\";\r\n\r\nimport MainPage from \"../../page/MainPage\";\r\nimport CityWeatherPage from \"../../page/CityWeatherPage\";\r\n\r\nfunction Routers(props) {\r\n    return(\r\n        <Switch>\r\n            <Route exact path={\"/openweather\"} component={MainPage}/>\r\n            <Route exact path={\"/weather/:name\"} component={CityWeatherPage}/>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routers;","import './App.css';\n\nimport Routers from \"./shared/routes/routes\";\n\nfunction App() {\n\n    return (<>\n        <Routers/>\n    </>);\n}\n\nexport default App;\n","import {combineReducers, createReducer} from \"@reduxjs/toolkit\";\r\nimport {\r\n    deleteCityInfoSuccess,\r\n    getCityInfoSuccess,\r\n    getCityWeatherHourlySuccess,\r\n    updateCityInfoRequest\r\n} from \"./city-actions\";\r\n\r\nconst cites = createReducer([], {\r\n    [getCityInfoSuccess]: (state, {payload}) => {\r\n        const idx = state.findIndex(item => item.name === payload.name)\r\n        if (idx !== -1) return\r\n        return [...state, payload]\r\n    },\r\n    [updateCityInfoRequest]: (state,{payload}) => {\r\n        const idx = state.findIndex(item => item.id === payload.id)\r\n        console.log(idx)\r\n        if (idx !== -1){\r\n            state[idx] = payload\r\n        }\r\n    },\r\n    [deleteCityInfoSuccess]: (state,{payload}) => {\r\n        const idx = state.findIndex(item => item.id === payload)\r\n        if (idx !== -1){\r\n            state.splice(idx,1)\r\n        }\r\n    }\r\n\r\n})\r\nconst weather_hourly = createReducer({},{\r\n    [getCityWeatherHourlySuccess]: (_,{payload}) => payload\r\n})\r\nexport default combineReducers({\r\n    cites,\r\n    weather_hourly\r\n})\r\n","import {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\r\nimport thunk from \"redux-thunk\"\r\n\r\nimport cityReducer from \"./city/city-reducer\"\r\n\r\nconst middleware = getDefaultMiddleware(thunk)\r\n\r\nexport const store = configureStore({\r\n    reducer:{\r\n        weather: cityReducer\r\n    },\r\n    middleware\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nimport App from './App';\n\nimport {store} from \"./redux/store\";\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}